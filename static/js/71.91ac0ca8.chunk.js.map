{"version":3,"file":"static/js/71.91ac0ca8.chunk.js","mappings":"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","sources":["components/ContactItem/ContactItem.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Section.styled.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\n\nexport const ContactItem = ({ name, number, onDelete }) => {\n  return (\n    <ListItem\n      secondaryAction={\n        <IconButton edge=\"end\" aria-label=\"delete\" onClick={onDelete}>\n          <DeleteIcon />\n        </IconButton>\n      }\n    >\n      <ListItemAvatar>\n        <ContactPhoneIcon />\n      </ListItemAvatar>\n      <ListItemText primary={name} />\n      <ListItemText primary={number} />\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.18;\n  display: block;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nexport const FilterInput = styled.input`\n  display: block;\n  margin: 0 auto;\n  padding: 3px;\n  margin-top: 6px;\n  margin-bottom: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.18;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from 'redux/contactsReducer';\nimport * as contactsReducer from 'redux/contactsReducer';\nimport { FilterLabel, FilterInput } from 'components/Filter/Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const changeFilter = evt => {\n    dispatch(contactsReducer.onChangeFilter(evt.currentTarget.value));\n  };\n\n  return (\n    <>\n      <FilterLabel>\n        Find contacts by name\n        <FilterInput\n          type=\"text\"\n          value={filter}\n          onChange={changeFilter}\n          placeholder=\"Enter search name\"\n        ></FilterInput>\n      </FilterLabel>\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getContacts, getFilter } from 'redux/contactsReducer';\nimport * as contactsOperations from 'redux/contactsOperations';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { Filter } from 'components/Filter/Filter';\nimport { LoaderContact } from 'components/Loader/Loader';\nimport Alert from '@mui/material/Alert';\nimport Box from '@mui/material/Box';\n\nexport const ContactList = () => {\n  const filter = useSelector(getFilter);\n  const items = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const filteredContacts = () => {\n    const filterNormalized = filter.toLowerCase();\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(filterNormalized)\n    );\n  };\n\n  const deleteItem = async id => {\n    await dispatch(contactsOperations.deleteContact(id));\n    dispatch(contactsOperations.fetchContacts());\n  };\n\n  const contactsList = filteredContacts();\n\n  return (\n    <Box\n      sx={{\n        width: 360,\n        display: 'block',\n        margin: '0 auto',\n      }}\n    >\n      {items.length !== 0 ? (\n        <>\n          <Filter />\n          <ul>\n            {contactsList.map(({ id, name, number }) => (\n              <ContactItem\n                key={id}\n                name={name}\n                number={number}\n                onDelete={() => deleteItem(id)}\n              />\n            ))}\n          </ul>\n          <LoaderContact />\n        </>\n      ) : (\n        <Alert severity=\"info\">There is no contact!</Alert>\n      )}\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const PhonebookForm = styled(Form)`\n  border: 1px solid #2a2a2a;\n  width: 340px;\n  padding: 10px;\n`;\n\nexport const LabelName = styled.label`\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.18;\n  display: block;\n  margin-bottom: 4px;\n`;\n\nexport const InputForm = styled(Field)`\n  display: block;\n  padding: 3px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.18;\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.18;\n  letter-spacing: 0.03em;\n  color: #ff0000;\n  margin-top: 5px;\n  margin-bottom: 20px;\n`;\n","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useAddContacts } from 'redux/contactsReducer';\nimport {\n  InputForm,\n  LabelName,\n  PhonebookForm,\n  ErrorText,\n} from 'components/ContactForm/ContactForm.styled';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.string().required(),\n});\n\nexport const ContactForm = () => {\n  const { contact } = useAddContacts();\n\n  const handleSubmit = (values, { resetForm }) => {\n    contact(values);\n    resetForm();\n  };\n\n  return (\n    <Box\n      sx={{\n        width: 360,\n        display: 'block',\n        margin: '0 auto',\n        backgroundColor: '#a9e8f5',\n      }}\n    >\n      <Formik\n        initialValues={initialState}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <PhonebookForm autoComplete=\"off\">\n          <LabelName htmlFor=\"name\">Name</LabelName>\n          <InputForm\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Enter your name\"\n            required\n          />\n          <ErrorText name=\"name\" component=\"div\" />\n          <LabelName htmlFor=\"number\">Number</LabelName>\n          <InputForm\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"(000)123-45-67\"\n            required\n          />\n          <ErrorText name=\"number\" component=\"div\" />\n          <Button variant=\"contained\" size=\"small\" type=\"submit\">\n            Add contact\n          </Button>\n        </PhonebookForm>\n      </Formik>\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const SectionContainer = styled.section`\n  padding: 15px;\n  width: 360px;\n`;\n\nexport const ContactTitle = styled.h2`\n  font-family: 'Roboto', sans-serif;\n  font-size: 24px;\n  font-weight: 700;\n  line-height: 1.4;\n  margin-top: 25px;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport * as contactsOperations from 'redux/contactsOperations';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactTitle } from 'components/Section.styled';\nimport Box from '@mui/material/Box';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n  return (\n    <Box\n      sx={{\n        width: '100%',\n        display: 'block',\n        margin: '0 auto',\n        padding: 2,\n        backgroundColor: '#f4ff77',\n      }}\n    >\n      <ContactForm />\n      <ContactTitle>Contacts</ContactTitle>\n      <ContactList />\n    </Box>\n  );\n}\n"],"names":["ContactItem","name","number","onDelete","ListItem","secondaryAction","IconButton","edge","onClick","Delete","ListItemAvatar","ContactPhone","ListItemText","primary","FilterLabel","styled","FilterInput","Filter","filter","useSelector","getFilter","dispatch","useDispatch","type","value","onChange","evt","contactsReducer","currentTarget","placeholder","ContactList","items","getContacts","deleteItem","id","contactsOperations","contactsList","filterNormalized","toLowerCase","contact","includes","filteredContacts","Box","sx","width","display","margin","length","map","Loader","Alert","severity","PhonebookForm","Form","LabelName","InputForm","Field","ErrorText","ErrorMessage","initialState","schema","yup","shape","required","ContactForm","useAddContacts","backgroundColor","initialValues","validationSchema","onSubmit","values","resetForm","autoComplete","htmlFor","pattern","title","component","Button","variant","size","ContactTitle","ContactsPage","useEffect","padding"],"sourceRoot":""}