{"version":3,"file":"static/js/65.83340009.chunk.js","mappings":"mQAGaA,EAAgBC,EAAAA,EAAAA,IAAH,8HAQbC,EAAYD,EAAAA,EAAAA,GAAH,gHAOTE,GAAmBF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,6JAShBI,EAAYJ,EAAAA,EAAAA,MAAH,uKASTK,GAAYL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,wNAYTO,GAAYP,EAAAA,EAAAA,GAAOQ,EAAAA,GAAPR,CAAH,kM,oBClChBS,EAAe,CACnBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNC,EAASC,EAAAA,KAAaC,MAAM,CAChCL,KAAMI,EAAAA,KAAaE,WACnBL,MAAOG,EAAAA,KAAaE,WACpBJ,SAAUE,EAAAA,KAAaE,aAGZC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACE,UAACpB,EAAD,YACE,SAACE,EAAD,iCACA,SAAC,KAAD,CACEmB,cAAeX,EACfY,iBAAkBR,EAClBS,SAXe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BN,EAASO,EAAAA,GAAwBF,IACjCC,KAME,UAKE,UAACtB,EAAD,CAAkBwB,aAAa,MAA/B,WACE,SAACtB,EAAD,CAAWuB,QAAQ,OAAnB,mBACA,SAACtB,EAAD,CACEuB,KAAK,OACLlB,KAAK,OACLmB,YAAY,kBACZb,UAAQ,KAEV,SAACT,EAAD,CAAWG,KAAK,OAAOoB,UAAU,SACjC,SAAC1B,EAAD,CAAWuB,QAAQ,QAAnB,oBACA,SAACtB,EAAD,CACEuB,KAAK,QACLlB,KAAK,QACLmB,YAAY,mBACZb,UAAQ,KAEV,SAACT,EAAD,CAAWG,KAAK,QAAQoB,UAAU,SAClC,SAAC1B,EAAD,CAAWuB,QAAQ,WAAnB,uBACA,SAACtB,EAAD,CACEuB,KAAK,WACLlB,KAAK,WACLmB,YAAY,iBACZb,UAAQ,KAEV,SAACT,EAAD,CAAWG,KAAK,WAAWoB,UAAU,SACrC,SAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,KAAK,QAAQL,KAAK,SAA9C,+BCjEK,SAASM,IACtB,OAAO,SAACjB,EAAD","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const FormContainer = styled.div`\n  display: block;\n  width: 100%;\n  height: 100vh;\n  margin: 0 auto;\n  background-color: #f4ff77;\n`;\n\nexport const PageTitle = styled.h1`\n  display: block;\n  text-align: center;\n  padding-top: 10px;\n  margin-bottom: 30px;\n`;\n\nexport const RegistrationForm = styled(Form)`\n  display: block;\n  margin: 0 auto;\n  border: 1px solid #2a2a2a;\n  width: 340px;\n  padding: 10px;\n  background-color: #a9e8f5;\n`;\n\nexport const LabelName = styled.label`\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1.18;\n  display: block;\n  margin-bottom: 4px;\n`;\n\nexport const InputForm = styled(Field)`\n  display: block;\n  padding: 3px;\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.18;\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  font-family: 'Roboto', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.18;\n  letter-spacing: 0.03em;\n  color: #ff0000;\n  margin-bottom: 5px;\n`;\n","import { useDispatch } from 'react-redux';\nimport * as authOperations from 'redux/Auth/authOperations';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport {\n  FormContainer,\n  PageTitle,\n  InputForm,\n  LabelName,\n  RegistrationForm,\n  ErrorText,\n} from 'components/RegisterForm/RegisterForm.styled';\nimport Button from '@mui/material/Button';\n\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().required(),\n  password: yup.string().required(),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(authOperations.register(values));\n    resetForm();\n  };\n\n  return (\n    <FormContainer>\n      <PageTitle>Registration form</PageTitle>\n      <Formik\n        initialValues={initialState}\n        validationSchema={schema}\n        onSubmit={handleSubmit}\n      >\n        <RegistrationForm autoComplete=\"off\">\n          <LabelName htmlFor=\"name\">Name</LabelName>\n          <InputForm\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter your name\"\n            required\n          />\n          <ErrorText name=\"name\" component=\"div\" />\n          <LabelName htmlFor=\"email\">Email</LabelName>\n          <InputForm\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            required\n          />\n          <ErrorText name=\"email\" component=\"div\" />\n          <LabelName htmlFor=\"password\">Password</LabelName>\n          <InputForm\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Enter password\"\n            required\n          />\n          <ErrorText name=\"password\" component=\"div\" />\n          <Button variant=\"contained\" size=\"small\" type=\"submit\">\n            Register\n          </Button>\n        </RegistrationForm>\n      </Formik>\n    </FormContainer>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function RegisterPage() {\n  return <RegisterForm />;\n}\n"],"names":["FormContainer","styled","PageTitle","RegistrationForm","Form","LabelName","InputForm","Field","ErrorText","ErrorMessage","initialState","name","email","password","schema","yup","shape","required","RegisterForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","values","resetForm","authOperations","autoComplete","htmlFor","type","placeholder","component","Button","variant","size","RegisterPage"],"sourceRoot":""}